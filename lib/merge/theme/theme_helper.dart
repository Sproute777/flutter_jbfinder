import 'dart:ui';
import 'package:flutter/material.dart';

import '../presentation/export.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      colorScheme: colorScheme,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(
              6,
            ),
          ),
          shadowColor: appTheme.indigo2002d,
          elevation: 4,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Color(0XFFFFFFFF),
          shape: RoundedRectangleBorder(
            side: BorderSide(
              color: colorScheme.onPrimary,
              width: 1,
            ),
            borderRadius: BorderRadius.circular(
              15,
            ),
          ),
        ),
      ),
      radioTheme: RadioThemeData(
        fillColor: MaterialStateProperty.all<Color>(appTheme.blueGray70001),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      checkboxTheme: CheckboxThemeData(
        checkColor: MaterialStateProperty.all<Color>(appTheme.blueGray70001),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      floatingActionButtonTheme: FloatingActionButtonThemeData(
        backgroundColor: colorScheme.primary,
      ),
      textTheme: TextTheme(
        bodyMedium: TextStyle(
          color: appTheme.blueGray70001,
          fontSize: getFontSize(
            14,
          ),
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w400,
        ),
        labelMedium: TextStyle(
          color: colorScheme.onPrimaryContainer,
          fontSize: getFontSize(
            10,
          ),
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w600,
        ),
        bodyLarge: TextStyle(
          color: appTheme.gray90002,
          fontSize: getFontSize(
            16,
          ),
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w400,
        ),
        titleSmall: TextStyle(
          color: appTheme.gray90004,
          fontSize: getFontSize(
            14,
          ),
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w700,
        ),
        labelLarge: TextStyle(
          color: appTheme.gray90004,
          fontSize: getFontSize(
            12,
          ),
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w700,
        ),
        titleMedium: TextStyle(
          color: appTheme.gray90004,
          fontSize: getFontSize(
            16,
          ),
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w700,
        ),
        labelSmall: TextStyle(
          color: appTheme.orange400,
          fontSize: getFontSize(
            8,
          ),
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w700,
        ),
        bodySmall: TextStyle(
          color: appTheme.blueGray70001,
          fontSize: getFontSize(
            12,
          ),
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w400,
        ),
        titleLarge: TextStyle(
          color: appTheme.gray90004,
          fontSize: getFontSize(
            20,
          ),
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w700,
        ),
      ),
      visualDensity: VisualDensity.standard,
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    background: Color(0XFFFF0404),
    error: Color(0XFF7551FF),
    errorContainer: Color(0XFF0F1728),
    inversePrimary: Color(0XFFFF0404),
    inverseSurface: Color(0XFF7551FF),
    onBackground: Color(0XFFFFFFFF),
    onError: Color(0XFF140261),
    onErrorContainer: Color(0XFF03A9F4),
    onInverseSurface: Color(0XFF140261),
    onPrimary: Color(0XFF7551FF),
    onPrimaryContainer: Color(0XFFFFFFFF),
    onSecondary: Color(0XFFFFFFFF),
    onSecondaryContainer: Color(0XFF081D58),
    onSurface: Color(0XFFFFFFFF),
    onSurfaceVariant: Color(0XFF081D58),
    onTertiary: Color(0XFFFFFFFF),
    onTertiaryContainer: Color(0XFF081D58),
    outline: Color(0XFF7551FF),
    outlineVariant: Color(0XFFFF0404),
    primary: Color(0XFF130160),
    primaryContainer: Color(0XFFFF0404),
    scrim: Color(0XFFFF0404),
    secondary: Color(0XFFFF0404),
    secondaryContainer: Color(0XFFCCC3C1),
    shadow: Color(0XFF7551FF),
    surface: Color(0XFFFF0404),
    surfaceTint: Color(0XFF7551FF),
    surfaceVariant: Color(0XFFCCC3C1),
    tertiary: Color(0XFFFF0404),
    tertiaryContainer: Color(0XFFCCC3C1),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF000000);
  // Blue
  Color get blue900 => Color(0XFF103793);
  // BlueGray
  Color get blueGray100 => Color(0XFFD0DBE0);
  Color get blueGray20026 => Color(0X26ABC7D3);
  Color get blueGray300 => Color(0XFF9D97B4);
  Color get blueGray30001 => Color(0XFF9D97B5);
  Color get blueGray30002 => Color(0XFFA0A7B1);
  Color get blueGray30003 => Color(0XFFA9A5B8);
  Color get blueGray30004 => Color(0XFF9FA7B1);
  Color get blueGray30005 => Color(0XFFA49EB5);
  Color get blueGray30006 => Color(0XFFA39EB4);
  Color get blueGray400 => Color(0XFF8982A2);
  Color get blueGray40001 => Color(0XFF898989);
  Color get blueGray40002 => Color(0XFF888888);
  Color get blueGray500 => Color(0XFF60778C);
  Color get blueGray700 => Color(0XFF524B6C);
  Color get blueGray70001 => Color(0XFF514A6B);
  Color get blueGray70002 => Color(0XFF514A6C);
  Color get blueGray800 => Color(0XFF3D4859);
  Color get blueGray80001 => Color(0XFF3E495A);
  Color get blueGray80002 => Color(0XFF3A3451);
  Color get blueGray80003 => Color(0XFF3B4657);
  Color get blueGray900 => Color(0XFF232C3A);
  Color get blueGray90001 => Color(0XFF333030);
  Color get blueGray90090 => Color(0X902C363B);
  // BlueGrayc
  Color get blueGray1006c => Color(0X6CCBC9D4);
  Color get blueGray1006c01 => Color(0X6CCBC8D4);
  // BlueGrayf
  Color get blueGray2003f => Color(0X3FB6BFC6);
  // DeepOrange
  Color get deepOrange100 => Color(0XFFFFB2B2);
  Color get deepOrangeA100 => Color(0XFFFF9E87);
  // DeepOrangeAc
  Color get deepOrangeA2006c => Color(0X6CFF6B2C);
  // DeepPurple
  Color get deepPurple100 => Color(0XFFD6CCFE);
  Color get deepPurple10001 => Color(0XFFD6CDFE);
  Color get deepPurpleA100 => Color(0XFFA993FF);
  Color get deepPurpleA10001 => Color(0XFFA992FF);
  Color get deepPurpleA700 => Color(0XFF3F13E4);
  // Gray
  Color get gray100 => Color(0XFFF5F5F5);
  Color get gray10001 => Color(0XFFF2F2F2);
  Color get gray200 => Color(0XFFF2F1F1);
  Color get gray300 => Color(0XFFDDE1E6);
  Color get gray30001 => Color(0XFFDEE1E7);
  Color get gray30002 => Color(0XFFE5E5E5);
  Color get gray30003 => Color(0XFFDCDCDC);
  Color get gray400 => Color(0XFFC4C4C4);
  Color get gray40001 => Color(0XFFB5B6B7);
  Color get gray40002 => Color(0XFFB5B6B6);
  Color get gray50 => Color(0XFFF8F8F8);
  Color get gray500 => Color(0XFFAAAAAA);
  Color get gray5001 => Color(0XFFF8F8F9);
  Color get gray600 => Color(0XFF6F6A7F);
  Color get gray60001 => Color(0XFF6F6B80);
  Color get gray700 => Color(0XFF5B5858);
  Color get gray900 => Color(0XFF141414);
  Color get gray90001 => Color(0XFF150A3C);
  Color get gray90002 => Color(0XFF0D0140);
  Color get gray90003 => Color(0XFF150A33);
  Color get gray90004 => Color(0XFF150B3D);
  // Green
  Color get green500 => Color(0XFF4DC132);
  Color get green50001 => Color(0XFF56CD53);
  Color get greenA700 => Color(0XFF04B015);
  // Indigo
  Color get indigo100 => Color(0XFFBEAFFE);
  Color get indigoA200 => Color(0XFF5665FF);
  Color get indigoA700 => Color(0XFF3847E5);
  // Indigod
  Color get indigo2002d => Color(0X2D99AAC5);
  // LightBlue
  Color get lightBlue100 => Color(0XFFAFECFE);
  // Orange
  Color get orange100 => Color(0XFFFED5AD);
  Color get orange400 => Color(0XFFFF9228);
  Color get orange50 => Color(0XFFFFF4E9);
  Color get orangeA200 => Color(0XFFFFB237);
  Color get orangeA20001 => Color(0XFFFCA34D);
  // Pink
  Color get pink40075 => Color(0X75E94D8A);
  // Red
  Color get red300 => Color(0XFFED676A);
  Color get red700 => Color(0XFFE5252A);
  Color get red70001 => Color(0XFFED1C24);
  Color get redA100 => Color(0XFFFF8588);
  Color get redA200 => Color(0XFFFB4646);
  Color get redA20001 => Color(0XFFFF4B4B);
  Color get redA20002 => Color(0XFFFF4D46);
  Color get redA20003 => Color(0XFFFF464A);
  // Teal
  Color get teal90099 => Color(0X990C3548);
  // White
  Color get whiteA700 => Color(0XFFFDFDFD);
  // Yellow
  Color get yellow100 => Color(0XFFFFEACC);
  Color get yellowA70087 => Color(0X87FFD500);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
